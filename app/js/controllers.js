// Generated by CoffeeScript 1.7.1
var mkmobileControllers;

mkmobileControllers = angular.module('mkmobileControllers', []);

mkmobileControllers.controller('SearchCtrl', [
  '$scope', '$routeParams', '$location', 'MkmApi', 'DataCache', function($scope, $routeParams, $location, MkmApi, DataCache) {
    $scope.search = function() {
      $location.search({
        search: $scope.query
      });
      if (!$scope.query) {
        return;
      }
      return $scope.running = MkmApi.search({
        param1: $scope.query
      }, function(data, headers) {
        var _ref, _ref1;
        $scope.data = data;
        $scope.running = null;
        if ((_ref = data.product) != null) {
          _ref.map(function(val) {
            return DataCache.product(val.idProduct, val);
          });
        }
        $scope.count = headers().range != null ? headers().range.replace(/^.*\//, '') : ((_ref1 = $scope.data.product) != null ? _ref1.length : void 0) || 0;
        if (!$scope.count) {
          return $scope.data.product = [];
        }
      });
    };
    $scope.count = 0;
    $scope.query = $routeParams.search;
    $scope.search();
    $scope.sort = "name";
    return $scope.loadResults = function() {
      if (!($scope.count > 100 && $scope.data.product.length < $scope.count)) {
        return;
      }
      if ($scope.running != null) {
        return;
      }
      return $scope.running = MkmApi.search({
        param1: $scope.query,
        param5: $scope.data.product.length + 1
      }, function(data) {
        var _ref;
        $scope.running = null;
        return $scope.data.product = $scope.data.product.concat((_ref = data.product) != null ? _ref.map(function(val) {
          return DataCache.product(val.idProduct, val);
        }) : void 0);
      });
    };
  }
]);

mkmobileControllers.controller('ProductCtrl', [
  '$scope', '$routeParams', 'MkmApi', 'DataCache', function($scope, $routeParams, MkmApi, DataCache) {
    $scope.product = DataCache.product($routeParams.productId);
    if ($scope.product == null) {
      MkmApi.product({
        param1: $routeParams.productId
      }, function(data) {
        return $scope.product = DataCache.product($routeParams.productId, data.product);
      });
    }
    $scope.data = MkmApi.articles({
      param1: $routeParams.productId
    }, function(data, headers) {
      var _ref;
      return $scope.count = headers().range != null ? headers().range.replace(/^.*\//, '') : ((_ref = data.article) != null ? _ref.length : void 0) || 0;
    });
    return $scope.loadArticles = function() {
      if (!($scope.count > 100 && $scope.data.article.length < $scope.count)) {
        return;
      }
      if ($scope.running != null) {
        return;
      }
      return $scope.running = MkmApi.articles({
        param1: $routeParams.productId,
        param2: $scope.data.article.length + 1
      }, function(data) {
        $scope.running = null;
        return $scope.data.article = $scope.data.article.concat(data.article);
      });
    };
  }
]);

//# sourceMappingURL=controllers.map
