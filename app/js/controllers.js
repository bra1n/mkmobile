// Generated by CoffeeScript 1.7.1
var mkmobileControllers;

mkmobileControllers = angular.module('mkmobileControllers', []);

mkmobileControllers.controller('SearchCtrl', [
  '$scope', '$routeParams', '$location', 'MkmApi', 'DataCache', function($scope, $routeParams, $location, MkmApi, DataCache) {
    $scope.search = function() {
      $location.search({
        query: $scope.query
      });
      return MkmApi.search({
        param1: $scope.query
      }, function(data) {
        var product, _i, _len, _ref, _results;
        if ((data != null ? data.product : void 0) == null) {
          return;
        }
        $scope.products = [];
        _ref = [].concat(data.product);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          product = _ref[_i];
          if (product.category.idCategory === "1") {
            _results.push($scope.products.push(DataCache.product(product.idProduct, product)));
          }
        }
        return _results;
      });
    };
    $scope.query = $routeParams.query;
    if ($scope.query) {
      $scope.search();
    }
    return $scope.sort = "name";
  }
]);

mkmobileControllers.controller('ProductCtrl', [
  '$scope', '$routeParams', 'MkmApi', 'DataCache', function($scope, $routeParams, MkmApi, DataCache) {
    $scope.productId = $routeParams.productId;
    $scope.product = DataCache.product($scope.productId);
    if ($scope.product == null) {
      MkmApi.product({
        param1: $routeParams.productId
      }, function(data) {
        return $scope.product = DataCache.product($routeParams.productId, data.product);
      });
    }
    return $scope.data = MkmApi.articles({
      param1: $routeParams.productId
    });
  }
]);

//# sourceMappingURL=controllers.map
