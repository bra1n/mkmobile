// Generated by CoffeeScript 1.7.1
var mkmobileServices;

mkmobileServices = angular.module('mkmobileServices', ['ngResource']);

mkmobileServices.factory('MkmApi', [
  '$resource', '$location', 'DataCache', function($resource, $location, DataCache) {
    var api, apiAuth, apiFormat, apiURL, auth, parseRangeHeader, redirectAfterLogin, toXML;
    parseRangeHeader = function(headers) {
      if (headers().range != null) {
        return parseInt(headers().range.replace(/^.*\//, ''), 10);
      } else {
        return 0;
      }
    };
    toXML = function(obj, recursive) {
      var prop, val, xml;
      if (recursive == null) {
        recursive = false;
      }
      xml = '';
      for (prop in obj) {
        val = obj[prop];
        if (typeof val === "object") {
          val = toXML(val, true);
        }
        xml += "<" + prop + ">" + val + "</" + prop + ">";
      }
      if (!recursive) {
        xml = '<?xml version="1.0" encoding="UTF-8" ?><request>' + xml + '</request>';
      }
      return xml;
    };
    auth = {
      consumerKey: "alb03sLPpFNAhi6f",
      consumerSecret: "HTIcbso87X22JdS3Yk89c2CojfZiNDMX",
      token: sessionStorage.getItem("token") || "",
      secret: sessionStorage.getItem("secret") || ""
    };
    redirectAfterLogin = "/";
    apiURL = 'https://www.mkmapi.eu/ws';
    apiAuth = '/bra1n/a042b2e17c5cba981d6f684ec338b98a';
    apiFormat = '/output.json';
    api = $resource(apiURL + apiFormat + '/:type/:param1/:param2/:param3/:param4/:param5', {}, {
      search: {
        url: apiURL + apiAuth + apiFormat + '/:type/:param1/:param2/:param3/:param4/:param5',
        params: {
          type: "products",
          param2: "1",
          param3: "1",
          param4: "false"
        },
        unique: "search",
        oauth: auth
      },
      articles: {
        url: apiURL + apiAuth + apiFormat + '/:type/:param1/:param2/:param3/:param4/:param5',
        params: {
          type: "articles"
        },
        cache: false,
        oauth: auth
      },
      product: {
        url: apiURL + apiAuth + apiFormat + '/:type/:param1/:param2/:param3/:param4/:param5',
        params: {
          type: "product"
        },
        oauth: auth
      },
      access: {
        method: 'POST',
        params: {
          type: "access"
        },
        headers: {
          'Content-type': 'application/xml'
        },
        oauth: auth
      },
      shoppingcart: {
        url: apiURL + apiAuth + apiFormat + '/:type/:param1/:param2/:param3/:param4/:param5',
        method: 'PUT',
        params: {
          type: 'shoppingcart'
        },
        headers: {
          'Content-type': 'application/xml'
        },
        oauth: auth
      }
    });
    return {
      search: function(query, response) {
        if (response == null) {
          response = {
            count: 0,
            products: []
          };
        }
        if (query) {
          response.loading = true;
          api.search({
            param1: query,
            param5: response.products.length + 1
          }, function(data, headers) {
            var _ref, _ref1;
            if ((_ref = data.product) != null) {
              _ref.map(function(val) {
                return DataCache.product(val.idProduct, val);
              });
            }
            response.count = parseRangeHeader(headers) || ((_ref1 = data.product) != null ? _ref1.length : void 0);
            if (response.count) {
              response.products = response.products.concat(data.product);
            }
            return response.loading = false;
          });
        }
        return response;
      },
      product: function(id) {
        var response;
        response = {
          product: DataCache.product(id)
        };
        if (response.product == null) {
          api.product({
            param1: id
          }, function(data) {
            return response.product = DataCache.product(id, data.product);
          });
        }
        return response;
      },
      cart: function() {
        return DataCache.cart();
      },
      getCartCount: function() {
        var article, count, seller, _i, _j, _len, _len1, _ref, _ref1;
        count = 0;
        _ref = DataCache.cart();
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          seller = _ref[_i];
          _ref1 = seller.article;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            article = _ref1[_j];
            count += parseInt(article.count, 10);
          }
        }
        return count;
      },
      addToCart: function(article, cb) {
        var request;
        request = {
          action: "add",
          article: {
            idArticle: article,
            amount: 1
          }
        };
        return api.shoppingcart(toXML(request), function(data) {
          console.log(data);
          DataCache.cart(data.shoppingCart);
          return typeof cb === "function" ? cb() : void 0;
        });
      },
      articles: function(id, response) {
        if (response == null) {
          response = {
            count: 0,
            articles: []
          };
        }
        response.loading = true;
        api.articles({
          param1: id,
          param2: response.articles.length + 1
        }, function(data, headers) {
          var _ref;
          response.count = parseRangeHeader(headers) || ((_ref = data.article) != null ? _ref.length : void 0);
          if (response.count) {
            response.articles = response.articles.concat(data.article);
          }
          return response.loading = false;
        });
        return response;
      },
      isLoggedIn: function() {
        return auth.secret !== "";
      },
      getLoginURL: function() {
        return apiURL + '/authenticate/' + auth.consumerKey;
      },
      logout: function() {
        auth.secret = auth.token = "";
        sessionStorage.removeItem("secret");
        sessionStorage.removeItem("token");
        return $location.path('/login');
      },
      checkLogin: function() {
        console.log("login check", this.isLoggedIn());
        if (!(this.isLoggedIn() && $location.path() !== "/login")) {
          redirectAfterLogin = $location.path();
          return $location.path('/login');
        }
      },
      getAccess: function(requestToken) {
        var request, response;
        response = {};
        if (requestToken != null) {
          auth.token = requestToken;
        }
        request = {
          app_key: auth.consumerKey,
          request_token: auth.token
        };
        api.access(toXML(request), function(data) {
          if (data.oauth_token && data.oauth_token_secret) {
            auth.token = data.oauth_token;
            auth.secret = data.oauth_token_secret;
            sessionStorage.setItem("auth", auth.token);
            sessionStorage.setItem("secret", auth.secret);
            response.success = true;
            return $location.path(redirectAfterLogin);
          }
        }, function() {
          return response.error = true;
        });
        return response = {};
      }
    };
  }
]);

mkmobileServices.factory('DataCache', [
  '$cacheFactory', function($cacheFactory) {
    var cache;
    cache = {
      product: $cacheFactory('products', {
        capacity: 500
      }),
      article: $cacheFactory('article', {
        capacity: 100
      }),
      cart: $cacheFactory('cart', {
        capacity: 1
      }),
      user: $cacheFactory('user', {
        capacity: 1
      })
    };
    return {
      product: function(id, data) {
        if (data != null) {
          cache.product.put(id, data);
        }
        if (id != null) {
          return cache.product.get(id);
        }
      },
      article: function(id, data) {
        if (data != null) {
          cache.article.put(id, data);
        }
        if (id != null) {
          return cache.article.get(id);
        }
      },
      cart: function(data) {
        if (data != null) {
          cache.cart.put(1, data);
        }
        return cache.cart.get(1) || [];
      },
      user: function(data) {
        if (data != null) {
          cache.user.put(1, data);
        }
        return cache.user.get(1) || [];
      }
    };
  }
]);

//# sourceMappingURL=services.map
